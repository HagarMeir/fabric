// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orderer/bftsmart/configuration.proto

package bftsmart

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ConfigMetadata is serialized and set as the value of ConsensusType.Metadata in
// a channel configuration when the ConsensusType.Type is set "bftsmart".
type ConfigMetadata struct {
	Consenters           []*Consenter `protobuf:"bytes,1,rep,name=consenters,proto3" json:"consenters,omitempty"`
	Options              *Options     `protobuf:"bytes,2,opt,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ConfigMetadata) Reset()         { *m = ConfigMetadata{} }
func (m *ConfigMetadata) String() string { return proto.CompactTextString(m) }
func (*ConfigMetadata) ProtoMessage()    {}
func (*ConfigMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_205a816a623cce14, []int{0}
}

func (m *ConfigMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfigMetadata.Unmarshal(m, b)
}
func (m *ConfigMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfigMetadata.Marshal(b, m, deterministic)
}
func (m *ConfigMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfigMetadata.Merge(m, src)
}
func (m *ConfigMetadata) XXX_Size() int {
	return xxx_messageInfo_ConfigMetadata.Size(m)
}
func (m *ConfigMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfigMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ConfigMetadata proto.InternalMessageInfo

func (m *ConfigMetadata) GetConsenters() []*Consenter {
	if m != nil {
		return m.Consenters
	}
	return nil
}

func (m *ConfigMetadata) GetOptions() *Options {
	if m != nil {
		return m.Options
	}
	return nil
}

// Consenter represents a consenting node (i.e. replica).
type Consenter struct {
	ConsenterId          uint32   `protobuf:"varint,1,opt,name=consenter_id,json=consenterId,proto3" json:"consenter_id,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	Identity             []byte   `protobuf:"bytes,4,opt,name=identity,proto3" json:"identity,omitempty"`
	ClientTlsCert        []byte   `protobuf:"bytes,5,opt,name=client_tls_cert,json=clientTlsCert,proto3" json:"client_tls_cert,omitempty"`
	ServerTlsCert        []byte   `protobuf:"bytes,6,opt,name=server_tls_cert,json=serverTlsCert,proto3" json:"server_tls_cert,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Consenter) Reset()         { *m = Consenter{} }
func (m *Consenter) String() string { return proto.CompactTextString(m) }
func (*Consenter) ProtoMessage()    {}
func (*Consenter) Descriptor() ([]byte, []int) {
	return fileDescriptor_205a816a623cce14, []int{1}
}

func (m *Consenter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Consenter.Unmarshal(m, b)
}
func (m *Consenter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Consenter.Marshal(b, m, deterministic)
}
func (m *Consenter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Consenter.Merge(m, src)
}
func (m *Consenter) XXX_Size() int {
	return xxx_messageInfo_Consenter.Size(m)
}
func (m *Consenter) XXX_DiscardUnknown() {
	xxx_messageInfo_Consenter.DiscardUnknown(m)
}

var xxx_messageInfo_Consenter proto.InternalMessageInfo

func (m *Consenter) GetConsenterId() uint32 {
	if m != nil {
		return m.ConsenterId
	}
	return 0
}

func (m *Consenter) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Consenter) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Consenter) GetIdentity() []byte {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *Consenter) GetClientTlsCert() []byte {
	if m != nil {
		return m.ClientTlsCert
	}
	return nil
}

func (m *Consenter) GetServerTlsCert() []byte {
	if m != nil {
		return m.ServerTlsCert
	}
	return nil
}

// Options to be specified for all the bftsmart nodes. These can be modified on a
// per-channel basis.
type Options struct {
	Config               []byte   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Options) Reset()         { *m = Options{} }
func (m *Options) String() string { return proto.CompactTextString(m) }
func (*Options) ProtoMessage()    {}
func (*Options) Descriptor() ([]byte, []int) {
	return fileDescriptor_205a816a623cce14, []int{2}
}

func (m *Options) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Options.Unmarshal(m, b)
}
func (m *Options) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Options.Marshal(b, m, deterministic)
}
func (m *Options) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Options.Merge(m, src)
}
func (m *Options) XXX_Size() int {
	return xxx_messageInfo_Options.Size(m)
}
func (m *Options) XXX_DiscardUnknown() {
	xxx_messageInfo_Options.DiscardUnknown(m)
}

var xxx_messageInfo_Options proto.InternalMessageInfo

func (m *Options) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

// BlockMetadata stores data used by the BFTSMART OSNs when
// coordinating with each other, to be serialized into
// block metadata field and used after failures and restarts.
// Maintains view configuration information such as: view id,
// latest sequence number. View id need to defer the id of the
// the leader.
type BlockMetadata struct {
	ViewId               uint64   `protobuf:"varint,1,opt,name=view_id,json=viewId,proto3" json:"view_id,omitempty"`
	LatestSequence       uint64   `protobuf:"varint,2,opt,name=latest_sequence,json=latestSequence,proto3" json:"latest_sequence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockMetadata) Reset()         { *m = BlockMetadata{} }
func (m *BlockMetadata) String() string { return proto.CompactTextString(m) }
func (*BlockMetadata) ProtoMessage()    {}
func (*BlockMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_205a816a623cce14, []int{3}
}

func (m *BlockMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockMetadata.Unmarshal(m, b)
}
func (m *BlockMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockMetadata.Marshal(b, m, deterministic)
}
func (m *BlockMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockMetadata.Merge(m, src)
}
func (m *BlockMetadata) XXX_Size() int {
	return xxx_messageInfo_BlockMetadata.Size(m)
}
func (m *BlockMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_BlockMetadata proto.InternalMessageInfo

func (m *BlockMetadata) GetViewId() uint64 {
	if m != nil {
		return m.ViewId
	}
	return 0
}

func (m *BlockMetadata) GetLatestSequence() uint64 {
	if m != nil {
		return m.LatestSequence
	}
	return 0
}

func init() {
	proto.RegisterType((*ConfigMetadata)(nil), "bftsmart.ConfigMetadata")
	proto.RegisterType((*Consenter)(nil), "bftsmart.Consenter")
	proto.RegisterType((*Options)(nil), "bftsmart.Options")
	proto.RegisterType((*BlockMetadata)(nil), "bftsmart.BlockMetadata")
}

func init() {
	proto.RegisterFile("orderer/bftsmart/configuration.proto", fileDescriptor_205a816a623cce14)
}

var fileDescriptor_205a816a623cce14 = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x92, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x86, 0x15, 0xba, 0xec, 0xb6, 0xb3, 0xbb, 0xad, 0x30, 0x12, 0x44, 0x9c, 0xd2, 0x08, 0x41,
	0x24, 0x24, 0x47, 0x6a, 0xc5, 0x0b, 0x74, 0x4f, 0x3d, 0x20, 0x84, 0xe1, 0xc4, 0x25, 0x4a, 0x9c,
	0xd9, 0xac, 0x45, 0x1a, 0x87, 0xf1, 0x6c, 0x51, 0x5f, 0x8f, 0x27, 0x43, 0xb1, 0x93, 0x74, 0xc5,
	0xcd, 0xf3, 0xff, 0xdf, 0x3f, 0xc9, 0x8c, 0x0d, 0xef, 0x2d, 0xd5, 0x48, 0x48, 0x79, 0xb5, 0x67,
	0xf7, 0x50, 0x12, 0xe7, 0xda, 0x76, 0x7b, 0xd3, 0x1c, 0xa9, 0x64, 0x63, 0x3b, 0xd9, 0x93, 0x65,
	0x2b, 0xce, 0x27, 0x37, 0x25, 0xb8, 0xdc, 0x79, 0xe0, 0x0b, 0x72, 0x59, 0x97, 0x5c, 0x8a, 0x5b,
	0x00, 0x6d, 0x3b, 0x87, 0x1d, 0x23, 0xb9, 0x38, 0x4a, 0xce, 0xb2, 0xf5, 0xcd, 0x6b, 0x39, 0x05,
	0xe4, 0x6e, 0xf2, 0xd4, 0x09, 0x26, 0x3e, 0xc1, 0xca, 0xf6, 0xc3, 0x07, 0x5c, 0xfc, 0x22, 0x89,
	0xb2, 0xf5, 0xcd, 0xab, 0xe7, 0xc4, 0xd7, 0x60, 0xa8, 0x89, 0x48, 0xff, 0x46, 0x70, 0x31, 0xb7,
	0x11, 0xd7, 0xb0, 0x99, 0x1b, 0x15, 0xa6, 0x8e, 0xa3, 0x24, 0xca, 0xb6, 0x6a, 0x3d, 0x6b, 0xf7,
	0xb5, 0x10, 0xb0, 0x38, 0x58, 0xc7, 0xbe, 0xf5, 0x85, 0xf2, 0xe7, 0x41, 0xeb, 0x2d, 0x71, 0x7c,
	0xe6, 0x71, 0x7f, 0x16, 0xef, 0xe0, 0xdc, 0xd4, 0xd8, 0xb1, 0xe1, 0xa7, 0x78, 0x91, 0x44, 0xd9,
	0x46, 0xcd, 0xb5, 0xf8, 0x00, 0x57, 0xba, 0x35, 0xd8, 0x71, 0xc1, 0xad, 0x2b, 0x34, 0x12, 0xc7,
	0x2f, 0x3d, 0xb2, 0x0d, 0xf2, 0x8f, 0xd6, 0xed, 0x90, 0x78, 0xe0, 0x1c, 0xd2, 0x23, 0xd2, 0x33,
	0xb7, 0x0c, 0x5c, 0x90, 0x47, 0x2e, 0xbd, 0x86, 0xd5, 0x38, 0x98, 0x78, 0x03, 0xcb, 0xb0, 0x64,
	0xff, 0xef, 0x1b, 0x35, 0x56, 0xe9, 0x37, 0xd8, 0xde, 0xb5, 0x56, 0xff, 0x9a, 0x57, 0xfb, 0x16,
	0x56, 0x8f, 0x06, 0xff, 0x4c, 0x53, 0x2e, 0xd4, 0x72, 0x28, 0xef, 0x6b, 0xf1, 0x11, 0xae, 0xda,
	0x92, 0xd1, 0x71, 0xe1, 0xf0, 0xf7, 0x11, 0x3b, 0x8d, 0x7e, 0xd6, 0x85, 0xba, 0x0c, 0xf2, 0xf7,
	0x51, 0xbd, 0x6b, 0x40, 0x5a, 0x6a, 0xe4, 0xe1, 0xa9, 0x47, 0x6a, 0xb1, 0x6e, 0x90, 0xe4, 0xbe,
	0xac, 0xc8, 0xe8, 0x70, 0xb1, 0x4e, 0x8e, 0xd7, 0x3f, 0x6f, 0xff, 0xe7, 0xe7, 0xc6, 0xf0, 0xe1,
	0x58, 0x49, 0x6d, 0x1f, 0xf2, 0x93, 0x58, 0x1e, 0x62, 0x79, 0x88, 0xe5, 0xff, 0xbf, 0x9a, 0x6a,
	0xe9, 0x8d, 0xdb, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x10, 0x4d, 0xc3, 0xca, 0x50, 0x02, 0x00,
	0x00,
}
